datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

model Example {
    id String @id @default(cuid())
}

model Project {
    id String @id

    name String

    ownerId       String
    owner         User            @relation(fields: [ownerId], references: [id])
    RequestObject RequestObject[]
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?   @db.Text
    accounts      Account[]
    sessions      Session[]
    Project       Project[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// app stuff
enum REQUEST_TYPE {
    POST
    PUT
    GET
    PATCH
    DELETE
    HEAD
    OPTIONS
    CONNECT
    TRACE
}

model RequestObject {
    id        String       @id @default(cuid())
    host      String
    endpoint  String
    method    REQUEST_TYPE
    headers   Json?
    body      String?      @db.Text
    timestamp DateTime     @default(now())
    size      Int

    projectId String
    project   Project @relation(fields: [projectId], references: [id])
}
