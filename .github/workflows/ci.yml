name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

jobs:
  build-lint-and-typecheck:
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      DATABASE_URL: file:./db.sqlite
      DB_HOST: ${{ secrets.FAKE_SECRET }}
      DB_PORT: ${{ secrets.FAKE_SECRET }}
      DB_NAME: ${{ secrets.FAKE_SECRET }}
      DB_USER: ${{ secrets.FAKE_SECRET }}
      DB_PASS: ${{ secrets.FAKE_SECRET }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: Next.js cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - name: Build
        run: pnpm turbo build

      - name: Lint & Typecheck
        run: pnpm turbo typecheck lint

  # Borrowed from CT3A - https://github.com/t3-oss/create-t3-app/blob/next/.github/workflows/ci.yml
  check-changeset:
    runs-on: ubuntu-latest
    name: Check Changeset
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install root dependencies
        run: pnpm --filter root install

      # This will use the `changedFilePatterns` to check that a changeset has been added
      # if any matched file has been changed
      - run: pnpm changeset status --since origin/next
